input {
  # SNMP Information
  snmp {
    walk => ["1.3.6.1.4.1.41112.1.10.1.4.1.3", "1.3.6.1.4.1.41112.1.10.1.4.1.4"]
    get => ["1.3.6.1.4.1.41112.1.10.1.5.3.0","1.3.6.1.4.1.41112.1.10.1.5.1.0"]
    hosts =>  [{host => "udp:10.22.200.10/161" community => "panda" version => "2c"}]
    interval => 30
    tags => ["snmp"]
  }
  exec {
      command => "snmpget -c panda -v 1 10.22.200.18 1.3.6.1.4.1.41112.1.3.3.1.64.1 1.3.6.1.4.1.41112.1.3.3.1.66.1 1.3.6.1.4.1.41112.1.3.2.1.6.1 1.3.6.1.4.1.41112.1.3.2.1.5.1 1.3.6.1.4.1.41112.1.3.1.1.14.1"
      interval => 30
      tags => ["exec"]
  }
}


filter {
    mutate {
      rename =>  { "host" => "host.name" } 
   }
  # filtering out for specific fields using substrings
  if "exec" in [tags]
  {
	  ruby {
	    code => "
	      wanted_fields = ['time','message','host']
	      event.to_hash.keys.each { |k|
		a = []
		    wanted_fields.each{ |x| if k.include?(x);  a.concat([true]) else a.concat([false]) end  }
		event.remove(k) unless a.any?()
	      }
	    "
	  }
	 grok {
            match => {"message" => "iso.+:\s(?<throughputx>\d+).*iso.+:\s(?<throughputrx>\d+).*iso.+:\s(?<capacitytx>\d+).*iso.+:\s(?<capacityrx>\d+).*iso.+:\s%{QUOTEDSTRING:sysname}"} 
         }
  }

}

output {
    # outputing to 
    stdout
    {
      codec => rubydebug
    }

    # output to elastic search
    #elasticsearch 
    #{
    #   hosts => "http://134.197.75.77:30549"
    #   data_stream => "true"
    #   data_stream_dataset => "snmpmetrics"
    #}

}


